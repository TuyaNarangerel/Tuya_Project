// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tuya_Project1.Data;

#nullable disable

namespace Tuya_Project1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240214070617_Third")]
    partial class Third
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tuya_Project1.Data.Calculator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CalculationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<double>("Num1")
                        .HasColumnType("float");

                    b.Property<double>("Num2")
                        .HasColumnType("float");

                    b.Property<string>("Operation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Result")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Calculators");
                });

            modelBuilder.Entity("Tuya_Project1.Data.Shape", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<double>("Base")
                        .HasColumnType("float");

                    b.Property<DateTime>("CalculationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<double>("Perimeter")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Shapes");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Area = 1280.0,
                            Base = 64.0,
                            CalculationDate = new DateTime(2024, 2, 14, 8, 6, 16, 818, DateTimeKind.Local).AddTicks(1974),
                            Height = 20.0,
                            Perimeter = 168.0,
                            Type = "Rectangle"
                        },
                        new
                        {
                            Id = -2,
                            Area = 376.73000000000002,
                            Base = 37.299999999999997,
                            CalculationDate = new DateTime(2024, 2, 14, 8, 6, 16, 818, DateTimeKind.Local).AddTicks(2034),
                            Height = 10.1,
                            Perimeter = 99.599999999999994,
                            Type = "Parallelogram"
                        },
                        new
                        {
                            Id = -3,
                            Area = 221.0,
                            Base = 17.0,
                            CalculationDate = new DateTime(2024, 2, 14, 8, 6, 16, 818, DateTimeKind.Local).AddTicks(2038),
                            Height = 13.0,
                            Perimeter = 68.0,
                            Type = "Rhombus"
                        },
                        new
                        {
                            Id = -4,
                            Area = 27200.0,
                            Base = 0.34000000000000002,
                            CalculationDate = new DateTime(2024, 2, 14, 8, 6, 16, 818, DateTimeKind.Local).AddTicks(2042),
                            Height = 0.16,
                            Perimeter = 1.1100000000000001,
                            Type = "Triangel"
                        });
                });

            modelBuilder.Entity("Tuya_Project1.Data.StenSaxPåse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ComputerChoice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GameDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Outcome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PlayerChoice")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("StenSaxPåseGames");
                });
#pragma warning restore 612, 618
        }
    }
}
